<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.0.4">

    <issue
        id="ScopedStorage"
        severity="Warning"
        message="WRITE_EXTERNAL_STORAGE no longer provides write access when targeting Android 10+"
        category="Correctness"
        priority="8"
        summary="Affected by scoped storage"
        explanation="Scoped storage is enforced on Android 10+ (or Android 11+ if using `requestLegacyExternalStorage`). In particular, `WRITE_EXTERNAL_STORAGE` will no longer provide write access to all files; it will provide the equivalent of `READ_EXTERNAL_STORAGE` instead.&#xA;&#xA;The `MANAGE_EXTERNAL_STORAGE` permission can be used to manage all files, but it is rarely necessary and most apps on Google Play are not allowed to use it. Most apps should instead migrate to use scoped storage. To modify or delete files, apps should request write access from the user as described at https://goo.gle/android-mediastore-createwriterequest.&#xA;&#xA;To learn more, read these resources: Play policy: https://goo.gle/policy-storage-help Allowable use cases: https://goo.gle/policy-storage-usecases"
        url="https://goo.gle/android-storage-usecases"
        urls="https://goo.gle/android-storage-usecases"
        errorLine1="    &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;/>"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/nursyah/Documents/reactnative/temp/noteapp/node_modules/expo-file-system/android/src/main/AndroidManifest.xml"
            line="5"
            column="36"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of commons-codec:commons-codec than 1.10 is available: 1.11"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="  api &apos;commons-codec:commons-codec:1.10&apos;"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/nursyah/Documents/reactnative/temp/noteapp/node_modules/expo-file-system/android/build.gradle"
            line="91"
            column="7"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of commons-io:commons-io than 1.4 is available: 2.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="  api &apos;commons-io:commons-io:1.4&apos;"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/nursyah/Documents/reactnative/temp/noteapp/node_modules/expo-file-system/android/build.gradle"
            line="92"
            column="7"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.jetbrains.kotlin:kotlin-stdlib-jdk7 than 1.6.10 is available: 1.6.21"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="  implementation &quot;org.jetbrains.kotlin:kotlin-stdlib-jdk7:${getKotlinVersion()}&quot;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/nursyah/Documents/reactnative/temp/noteapp/node_modules/expo-file-system/android/build.gradle"
            line="98"
            column="18"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="This `AsyncTask` class should be static or leaks might occur (expo.modules.filesystem.FileSystemModule.DownloadResumableTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="  private inner class DownloadResumableTask : AsyncTask&lt;DownloadResumableTaskParams?, Void?, Void?>() {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/nursyah/Documents/reactnative/temp/noteapp/node_modules/expo-file-system/android/src/main/java/expo/modules/filesystem/FileSystemModule.kt"
            line="1101"
            column="23"/>
    </issue>

</issues>
